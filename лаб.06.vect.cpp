/*
    ะะฐะฑะพัะฐัะพัะฝะฐั ัะฐะฑะพัะฐ โ6
    ะะฐัะธะฐะฝั 26
    ะกััะดะตะฝั ะััะฐะฝะธะฝ ะก.ะ; ะณััะฟะฟะฐ ะะ-ะญ
    ะะฐะดะฐัะฐ:
    ะะพัััะธัะธะตะฝัั ะผะฝะพะณะพัะปะตะฝะฐ ๐๐๐ฅ๐ + ๐๐โ1๐ฅ๐โ1 + โฏ + ๐1๐ฅ + ๐0 ัะฐะท
    ะผะตัะตะฝั ะฒ ะผะฐััะธะฒะต ๐0, ๐1 โฆ ๐๐โ1, ๐๐. ะะฐะฝะพ ะฒะตัะตััะฒะตะฝะฝะพะต ัะธัะปะพ ๐ฅ. 
    ะะฐะนัะธ ะทะฝะฐัะตะฝะธะต ะผะฝะพะณะพัะปะตะฝะฐ ะดะปั ะดะฐะฝะฝะพะณะพ ๐ฅ. ะฃะบะฐะทะฐะฝะธะต: ะฒะฒะพะด ะบะพัััะธัะธะตะฝัะพะฒ
    ะพัััะตััะฒะปััั ั ะบะปะฐะฒะธะฐัััั, ะฝะฐัะธะฝะฐั ัะพ ััะฐััะตะณะพ ะบะพัััะธัะธะตะฝัะฐ;
    ะพะฟะตัะฐัะธั ะฒะพะทะฒะตะดะตะฝะธั ะฒ ััะตะฟะตะฝั ะฝะต ะธัะฟะพะปัะทะพะฒะฐัั
*/

#include <iostream>
#include <vector>
#include <locale.h>

using namespace std;

// ะคัะฝะบัะธั ะดะปั ะฒะฒะพะดะฐ ะบะพัััะธัะธะตะฝัะพะฒ ะผะฝะพะณะพัะปะตะฝะฐ
void inputCoefficients(vector<double>& coefficients) {
    cout << "ะะฒะตะดะธัะต ะบะพัััะธัะธะตะฝัั ะผะฝะพะณะพัะปะตะฝะฐ, ะฝะฐัะธะฝะฐั ัะพ ััะฐััะตะณะพ (a_n, a_{n-1}, ..., a_0):" << endl;
    for (size_t i = 0; i < coefficients.size(); i++) {
        cout << "a[" << i << "]: ";
        cin >> coefficients[i];
    }
}

// ะคัะฝะบัะธั ะดะปั ะฒััะธัะปะตะฝะธั ะทะฝะฐัะตะฝะธั ะผะฝะพะณะพัะปะตะฝะฐ 
double evaluatePolynomial(const vector<double>& coefficients, double x) {
    double result = coefficients[0]; 
    for (size_t i = 1; i < coefficients.size(); i++) {
        result = result * x + coefficients[i];
    }
    return result;
}

int main() {
    setlocale(LC_ALL, "Russian");
    
    int n; 
    cout << "ะะฒะตะดะธัะต ััะตะฟะตะฝั ะผะฝะพะณะพัะปะตะฝะฐ (n): " << endl;
    cin >> n;

    // ะกะพะทะดะฐะตะผ ะฒะตะบัะพั ั n + 1 ัะปะตะผะตะฝัะฐะผะธ ะดะปั ะบะพัััะธัะธะตะฝัะพะฒ
    vector<double> coefficients(n + 1);

    inputCoefficients(coefficients);

    double x;
    cout << "ะะฒะตะดะธัะต ะทะฝะฐัะตะฝะธะต x: " << endl;
    cin >> x;

    double result = evaluatePolynomial(coefficients, x);

    cout << "ะะฝะฐัะตะฝะธะต ะผะฝะพะณะพัะปะตะฝะฐ ะดะปั x = " << x << " ัะฐะฒะฝะพ: " << result << endl;

    return 0;
}